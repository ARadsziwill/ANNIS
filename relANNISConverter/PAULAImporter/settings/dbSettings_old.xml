<setMgr:settings xmlNs:setMgr="irgendwo">
	<!-- Hier erfolgt die Angabe der Verbindungsparameter zur Datenbank -->
	<setMgr:setting xml:id="DB_CONNECTION">
		<entry name="driver" value="org.postgresql.Driver" />
		<entry name="host" value="localhost" />
		<entry name="port" value="5432" />
		<entry name="database" value="relANNIS" />
		<entry name="user" value="relANNIS_user" />
		<entry name="password" value="relANNIS" />
	</setMgr:setting>
	<!--
		Hier erfolgt eine Beschreibung der benutzten Relationen aus dem
		DDD-Modell. Dazu gehoeren Relationsname, sowie dessen Attributnamen
		und Attributtypen. tupleType gibt an, ob fuer einer Relation der
		TupleWriter oder der IDTupleWriter beutzt werden soll.
	-->
	<setMgr:setting xml:id="SQL_DDDModel">
		<!--
			Verzeichnis, in das die BULK-Dateien geschrieben werden sollen, mit
			Angabe, ob sie nach import in die DB wieder gloescht werden sollen
			src='beliebiger Pfad' temp= (yes|no)
		-->
		<collection src="E:\db_test\bulk\" temp="yes">
			<!--
				Relation absName= abstrakter Name als Bezeichner im DDD-Modell,
				relName= konkreter Name der Relation, file= Name des
				BULK-UPload-files, tupleID= hat eine eigene ID oder nicht
			-->
			<dependencies>
				<relDep idref="1" />
				<relDep idref="2" />
				<relDep idref="3" />
				<relDep idref="4" />
				<relDep idref="5" />
				<relDep idref="6" />
			</dependencies>
			<!-- fuer die Korpusdaten -->
			<relation xml:id="rel1" absName="korpDataRel" relName="korpus"
				file="korpus_bulk.tab" tupleType="ID" idVal="id">
				<attribute name="id" type="number(38)" />
				<attribute name="name" type="character varying(100)" />
				<attribute name="pre" type="number(38)" />
				<attribute name="post" type="number(38)" />
			</relation>
			<!-- fuer die Documentdaten -->
			<relation xml:id="rel2" absName="DocDataRel" relName="doc_2_korp"
				file="doc_2_korp_bulk.tab" tupleType="nonID">
				<attribute name="doc_id" type="number(38)" />
				<attribute name="korpus_ref" type="number(38)" />
			</relation>
			<!-- fuer die Primaerdaten -->
			<relation xml:id="rel3" absName="primDataRel" relName="text"
				file="text_bulk.tab" tupleType="ID" idVal="id">
				<attribute name="id" type="number" />
				<attribute name="name" type="character varying(150)" />
				<attribute name="text" type="clob" />
				<attribute name="col_ref" type="number(38)" />
			</relation>
			<!-- fuer die Strukturdaten -->
			<relation xml:id="rel4" absName="StructDataRel" relName="struct"
				file="struct_bulk.tab" tupleType="ID" idVal="id">
				<attribute name="id" type="number(38)" />
				<attribute name="text_ref" type="number(38)" />
				<attribute name="doc_ref" type="number(38)" />
				<attribute name="col_ref" type="number(38)" />
				<attribute name="name" type="character varying(100) NOT NULL" />
				<attribute name="type" type="character varying(100) NOT NULL" />
				<attribute name="left" type="number(38)" />
				<attribute name="right" type="number(38)" />
				<attribute name="order" type="number(38)" />
				<attribute name="cont" type="boolean" />
				<attribute name="text" type="text" />
			</relation>
			<!-- fuer die Structurverbindungsdaten -->
			<relation xml:id="rel5" absName="StructRankRel" relName="rank"
				file="rank_bulk.tab" tupleType="nonID">
				<attribute name="pre" type="number(38)" />
				<attribute name="post" type="number(38)" />
				<attribute name="struct_ref" type="number(38)" />
				<attribute name="parent" type="number(38)" />
				<attribute name="dominance" type="boolean" />
			</relation>
			<!-- fuer die Kantenannotationen der Structurverbindungsdaten -->
			<relation xml:id="rel6" absName="EdgeAnnoRel" relName="rank_anno"
				file="rank_anno_bulk.tab" tupleType="nonID">
				<attribute name="rank_ref" type="number(38)" />
				<attribute name="type" type="character varying(150)" />
				<attribute name="name" type="character varying(150)" />
				<attribute name="value" type="character varying(150)" />
			</relation>
			<!-- fuer die Buendelung der Annotationsdaten -->
			<relation xml:id="rel7" absName="AnnoDataRel" relName="anno"
				file="anno_bulk.tab" tupleType="ID" idVal="ID">
				<attribute name="id" type="number(38)" />
				<attribute name="struct_ref" type="number(38)" />
				<attribute name="col_ref" type="number(38)" />
				<attribute name="anno_level" type="character varying(150)" />
			</relation>
			<!-- fuer die eigentlichen Annotationsdaten -->
			<relation xml:id="rel8" absName="AnnoAttDataRel" relName="anno_attribute"
				file="anno_attribute_bulk.tab" tupleType="nonID">
				<attribute name="anno_ref" type="number(38)" />
				<attribute name="name" type="character varying(150)" />
				<attribute name="value" type="character varying(150)" />
			</relation>
			<!-- fuer die Collectiondaten -->
			<relation xml:id="rel9" absName="ColDataRel" relName="collection"
				file="collection_bulk.tab" tupleType="ID" idVal="id">
				<attribute name="id" type="number(38)" />
				<attribute name="type" type="character varying(150)" />
				<attribute name="name" type="character varying(150)" />
			</relation>
			<!-- fuer die Struktur der Collectiondaten -->
			<relation xml:id="rel10" absName="ColRankDataRel" relName="col_rank"
				file="col_rank_bulk.tab" tupleType="nonID">
				<attribute name="col_ref" type="number(38)" />
				<attribute name="pre" type="number(38)" />
				<attribute name="post" type="number(38)" />
			</relation>

			<!-- fuer die Meta-Annotationsdaten, die auf eine Collection zeigen -->
			<relation xml:id="rel11" absName="ColAnnoDataRel" relName="meta_attribute"
				file="meta_attribute_bulk.tab" tupleType="nonID">
				<attribute name="col_ref" type="number(38)" />
				<attribute name="name" type="character varying(150)" />
				<attribute name="value" type="character varying(150)" />
			</relation>
			<!-- fuer die Metadaten -->
			<!--meta_attribute;-->
		</collection>
	</setMgr:setting>
	<!--
		Hier erfolgt eine Beschreibung der Arbeitsnamen wie die im Programm
		genutzt werden und eine Zuordnung wie sie im DDD-Modell eingesetzt
		werden. workName= Arbeitsname im Programm (darf nicht geaendert
		werden), usedName= Name fuer das DDD-Modell
	-->
	<setMgr:setting xml:id="Class_model_names">
		<modelName workName="paula_id" usedName="paulaID" />
	</setMgr:setting>
</setMgr:settings>
