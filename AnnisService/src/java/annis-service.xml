<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"

	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
	">

	<!-- Enable bean autowiring -->
	<context:annotation-config/>

	<!-- Transaction management -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- DDDquery Parser -->
	<bean id="dddQueryParser" class="de.deutschdiachrondigital.dddquery.parser.DddQueryParser">
		<lookup-method name="getPostProcessors" bean="parserPostProcessors"/>
	</bean>
	<util:list id="parserPostProcessors" value-type="de.deutschdiachrondigital.dddquery.analysis.DepthFirstAdapter" scope="prototype">
		<bean class="de.deutschdiachrondigital.dddquery.parser.postprocessors.MarkerNormalizer" scope="prototype" />
		<bean class="de.deutschdiachrondigital.dddquery.parser.postprocessors.StringLiteralNormalizer" scope="prototype" />
		<bean class="de.deutschdiachrondigital.dddquery.parser.postprocessors.VarrefNodeTestNormalizer" scope="prototype" />
		<bean class="de.deutschdiachrondigital.dddquery.parser.postprocessors.ChildAxisNormalizer" scope="prototype" />
		<bean class="de.deutschdiachrondigital.dddquery.parser.postprocessors.NodeTestNormalizer" scope="prototype" />
	</util:list>

	<bean id="aliasSetProvider" class="de.deutschdiachrondigital.dddquery.sql.old2.AliasSetProvider"  scope="prototype"/>
	
	<bean id="pathTranslator" class="de.deutschdiachrondigital.dddquery.sql.old2.PathTranslator4" scope="prototype">
		<property name="aliasSetProvider" ref="aliasSetProvider"/>
		<property name="rankTable" value="rank"/>
		<property name="rankAnnoTable" value="rank_anno"/>
		<property name="structTable" value="struct_annotation"/>
		<property name="annoTable" value="struct_annotation"/>
		<property name="annoAttributeTable" value="struct_annotation"/>
	</bean>
	
	<bean id="graphTranslator" class="de.deutschdiachrondigital.dddquery.sql.old2.GraphTranslator" scope="prototype">
		<!--  property name="aliasSetProvider" ref="aliasSetProvider"/ -->
		<property name="pathTranslator" ref="pathTranslator"/>
	</bean>
	
	<bean id="sqlGenerator" class="de.deutschdiachrondigital.dddquery.sql.SqlGenerator" scope="prototype">
		<property name="pathTranslator" ref="pathTranslator"/>
	</bean>
	
	<bean id="thorstenPathSqlGenerator" class="de.deutschdiachrondigital.dddquery.sql.old2.PathSqlGenerator" scope="prototype"/>
	
	<bean id="thorstenSqlGenerator" class="de.deutschdiachrondigital.dddquery.sql.old2.ThorstenSqlGenerator" scope="prototype">
		<property name="pathSqlGenerator" ref="thorstenPathSqlGenerator"/>
	</bean>
	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>file:${annis.home}/conf/annis-service.properties</value>
				<value>file:${annis.home}/conf/database.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- configured in local.properties -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${datasource.driver}"/>
		<property name="url" value="${datasource.url}"/>
		<property name="username" value="${datasource.username}"/>
		<property name="password" value="${datasource.password}"/>
	</bean>
	
	<bean 
		id="queryExecution" class="de.deutschdiachrondigital.dddquery.helper.QueryExecution">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<bean id="graphMatcher" class="de.deutschdiachrondigital.dddquery.dao.SpringDddQueryDao" scope="prototype">
		<property name="preProcessors" ref="sqlGenerationPreProcessors"/>
		<property name="parser" ref="dddQueryParser"/>
		<property name="graphTranslator" ref="graphTranslator"/>
		<property name="sqlGenerator" ref="sqlGenerator"/>
		<property name="dataSource" ref="dataSource"/>
		<property name="matchFilters">
			<util:list>
				<bean class="de.deutschdiachrondigital.dddquery.dao.MultipleTextsFilter" scope="prototype"/>
				<bean class="de.deutschdiachrondigital.dddquery.dao.DuplicateMatchFilter" scope="prototype"/>
			</util:list>
		</property>				
	</bean>

	<bean id="disjunctiveNormalformNormalizer" class="de.deutschdiachrondigital.dddquery.sql.DnfTransformer" scope="prototype"/>
	<bean id="semanticAnalysis" class="de.deutschdiachrondigital.dddquery.sql.preprocessors.SemanticAnalysis" scope="prototype"/>
	<bean id="leadingChildAxisRemover" class="de.deutschdiachrondigital.dddquery.sql.preprocessors.LeadingChildAxisRemover" scope="prototype"/>

	<util:list id="sqlGenerationPreProcessors" value-type="de.deutschdiachrondigital.dddquery.analysis.DepthFirstAdapter">
		<ref bean="disjunctiveNormalformNormalizer"/>
		<ref bean="leadingChildAxisRemover"/>
	</util:list>
	
	<bean id="dddQueryMapper" class="de.deutschdiachrondigital.dddquery.helper.AnnisQlTranslator" scope="prototype"/>

	<bean id="annisResultSetBuilder" class="annisservice.AnnisResultSetBuilder" scope="prototype"/>

	<bean id="getCorpusHandler" class="annisservice.handler.GetCorpusHandler">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<bean id="getNodeAttributeSetHandler" class="annisservice.handler.GetNodeAttributeSetHandler">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<bean id="getNodeAttributeSetWithValuesHandler" class="annisservice.handler.GetNodeAttributeSetWithValuesHandler">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<bean id="getCountHandler" class="annisservice.handler.CachingGetCountHandler">
		<lookup-method name="dddQueryMapper" bean="dddQueryMapper"/>
		<lookup-method name="graphMatcher" bean="graphMatcher"/>
		<property name="cacheEnabled" value="${annis.enable-match-cache}"/>
	</bean>
	
	<bean id="getPaulaHandler" class="annisservice.handler.GetPaulaHandler">
		<lookup-method name="annisResultSetBuilder" bean="annisResultSetBuilder"/>
		<lookup-method name="queryExecution" bean="queryExecution"/>
	</bean>

	<bean id="getResultHandler" class="annisservice.handler.CachingGetResultHandler">
		<lookup-method name="annotationRetriever" bean="annotationRetriever"/>
		<lookup-method name="annisResultSetBuilder" bean="annisResultSetBuilder"/>
		<lookup-method name="queryExecution" bean="queryExecution"/>
		<property name="cacheEnabled" value="${annis.enable-annotations-cache}"/>
	</bean>

	<bean id="annisService" class="annisservice.AnnisServiceImpl" init-method="sayHello"/>
	
	<bean id="externalFileManagerDao" class="annisservice.extFiles.ExternalFileMgrDAO">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<bean id="externalFileManager" class="annisservice.extFiles.ExternalFileMgrImpl">
		<property name="externalDataFolder" value="${annis.external-data-path}"/>
	</bean>

	<bean id="annisResolver" class="annisservice.annisresolver.ANNISResolver"/>

	<bean id="shell" class="de.deutschdiachrondigital.dddquery.helper.Shell" scope="prototype">
<!-- 
		<property name="graphMatcher" ref="graphMatcher"/>
		<property name="annotationRetriever" ref="annotationRetriever"/>
		<property name="dddQueryMapper" ref="dddQueryMapper"/>
-->
		<property name="annisService" ref="annisService"/>
	</bean>
	
	<bean id="annotationRetriever" class="de.deutschdiachrondigital.dddquery.sql.old2.AnnotationRetriever" scope="prototype">
		<property name="queryExecution" ref="planQueryExecution"/>
		<property name="sqlGenerator">
			<bean class="de.deutschdiachrondigital.dddquery.sql.old2.AnnotationRetrieverSqlGenerator6" scope="prototype"/>
		</property>
	</bean>
	
	<bean id="planQueryExecution" class="de.deutschdiachrondigital.dddquery.helper.PlanQueryExecution" scope="prototype">
		<property name="queryExecution" ref="queryExecution"/>
		<property name="analyze" value="${annis.time-query-plans}"/>
	</bean>
	
	<bean id="benchmark" class="de.deutschdiachrondigital.dddquery.helper.Benchmark" scope="prototype">
		<property name="graphMatcher" ref="graphMatcher"/>
		<property name="annotationRetriever" ref="annotationRetriever"/>
		<property name="dddQueryMapper" ref="dddQueryMapper"/>
		<property name="repetitions" value="1"/>
		<property name="queryExecution" ref="planQueryExecution"/>
		<property name="queries">
			<util:list>

				<value><![CDATA[pos=/^N.*$/ & "2000" & #1 . #2]]></value>
				<value><![CDATA[pos=/^N.*$/ & /^20[0-9][0-9]$/ & #1 . #2]]></value>
<!--
				<value><![CDATA[cat="PP" & "des" & pos="APPR" & #1 > #2 & #3 _l_ #1 & #3 . #2]]></value>
				<value><![CDATA[cat="PP" & "des" & pos="APPR" & #1 >MO #2 & #3 _l_ #1 & #3 . #2]]></value>
	 			<value><![CDATA[cat="NP" & "des" & #2 _l_ #1 & #1 > #2]]></value>
				<value><![CDATA[cat="NP" & "des" & #2 _l_ #1 & #1 >MO #2 ]]></value>
				<value><![CDATA[cat="S" & pos="KOUS" & pos="VVFIN" & #1 > #3 & #2 _l_ #1]]></value>
				<value><![CDATA[cat="S" & "als" & pos="PPER" & cat & cat & #1 > #2 & #2 . #3 & #3 . #4 & #4 . #5 & #1 > #4]]></value>
				<value><![CDATA[cat="S" & "als" & pos="PPER" & cat & cat & #1 > #2 & #2 . #3 & #3 . #4 & #4 . #5 & #1 >SB #4]]></value>
				<value><![CDATA[pos="KOUS" & "man" & "sich" & #1 . #2 & #2 . #3]]></value>


				<value><![CDATA[cat="NP" & cat=/(NP|PP)/ & pos=/(VVFIN|VVINF)/ & pos="PRELS" & tok & #2 > #1 & #2 > #4 & #5 _l_ #1 & #1 .* #3 & #3 .* #4]]></value>
				<value><![CDATA[lemma=/[^äöü]+/ & /.+[äöü].+/ & pos="NN" & #1 _=_ #2 & #2 _=_ #3]]></value>
				<value><![CDATA["je" & "desto" & #1 .* #2]]></value>
				<value><![CDATA[lemma=/.+[^aeiouäöü]chen/ & pos="NN" & #1 _=_ #2]]></value>
				<value>/[A-ZÄÖÜ][a-zäöüß]+-[A-ZÄÖÜ][a-zäöüß]+/</value>
				<value>"*trock*"</value>


				<value><![CDATA[cat="S" & pos="PTKVZ" & pos="VVFIN" & #1 > #3 & #2 _l_ #1]]></value>
				<value>/.*trock.*/</value>
-->
			</util:list>
		</property>
	</bean>

</beans>
