<?xml version="1.0" encoding="UTF-8"?>
<beans 

	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
	">

	<!-- Enable bean autowiring -->
	<context:annotation-config/>
	
	<!-- Enable AspectJ-style AOP annotations -->
	<aop:aspectj-autoproxy/>

	<!-- database connection configuration -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="file:${annis.home}/conf/database.properties"/>
		<property name="placeholderPrefix" value="$dao{"/>
	</bean>
	
	<!-- Transaction management -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- DataSource -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="$dao{datasource.driver}"/>
		<property name="url" value="$dao{datasource.url}"/>
		<property name="username" value="$dao{datasource.username}"/>
		<property name="password" value="$dao{datasource.password}"/>
	</bean>

	<!-- Helper for annotate command -->
	<bean id="annotationGraphDaoHelper" class="annis.dao.AnnotationGraphDaoHelper">
		<property name="dddQueryParser" ref="dddQueryParser"/>
		<property name="sqlGenerator" ref="findSqlGenerator"/>
		<property name="queryAnalysis" ref="queryAnalysis"/>
	
	</bean>
		
	<!-- Helper for weka command -->
	<bean id="wekaDaoHelper" class="annis.WekaDaoHelper"/>
	
	<!-- Helper for list command -->
	<bean id="listCorpusSqlHelper" class="annis.sqlgen.ListCorpusSqlHelper"/>
		
	<!-- Helper for nodeAnnotations command -->
	<bean id="listNodeAnnotationsSqlHelper" class="annis.sqlgen.ListNodeAnnotationsSqlHelper"/>
		
	<!-- Helper for listCorpusAnnotations command -->
	<bean id="listCorpusAnnotationsSqlHelper" class="annis.sqlgen.ListCorpusAnnotationsSqlHelper"/>
		
	<!-- DddQueryParser -->
	<import resource="classpath:de/deutschdiachrondigital/dddquery/parser/DddQueryParser-context.xml"/>
	
	<!-- SqlGenerator -->
	<import resource="classpath:annis/sqlgen/SqlGenerator-context.xml"/>

	<!-- XXX: Rowmapper? -->
	<bean id="matchRowMapper" class="annis.dao.MatchRowMapper"/>
	
	<!-- Timing Aspect for DAO methods -->
	<bean class="annis.dao.DaoTiming"/>
	
	<!-- Custom transaction management, so that all AnnisDao methods are read-only -->
	<bean class="annis.dao.DaoTransactionManagement">
		<property name="transactionManager" ref="transactionManager"/>
	</bean>
	
	<bean id="listCorpusByNameDaoHelper" class="annis.dao.ListCorpusByNameDaoHelper">
		<property name="requiredType" value="java.lang.Long"/>
	</bean>
	
	<!-- exported bean: AnnisDao -->
	<bean id="springAnnisDao" class="annis.dao.SpringAnnisDao">
		<property name="timeout" value="60000"/>
		<property name="dataSource" ref="dataSource"/>
		<property name="dddQueryParser" ref="dddQueryParser"/>
		<property name="sqlGenerator" ref="findSqlGenerator"/>
		<property name="matchFilters" ref="springAnnisDaoMatchFilters"/>
		<property name="annotationGraphDaoHelper" ref="annotationGraphDaoHelper"/>
		<property name="wekaSqlHelper" ref="wekaDaoHelper"/>
		<property name="listCorpusSqlHelper" ref="listCorpusSqlHelper"/>
		<property name="listNodeAnnotationsSqlHelper" ref="listNodeAnnotationsSqlHelper"/>
		<property name="listCorpusAnnotationsSqlHelper" ref="listCorpusAnnotationsSqlHelper"/>
		
		<!-- new -->
		<property name="queryAnalysis" ref="queryAnalysis"/>
		<property name="findSqlGenerator" ref="findSqlGenerator"/>
		<property name="findRowMapper" ref="matchRowMapper"/>
		<property name="sqlSessionModifiers" ref="sqlSessionModifiers"/>
		<property name="listCorpusByNameDaoHelper" ref="listCorpusByNameDaoHelper"/>
		<property name="countSqlGenerator" ref="countSqlGenerator"/>
	</bean>
	
	<bean id="timeOutSqlSessionModifier" class="annis.dao.TimeOutSqlSessionModifier">
		<property name="timeout" value="600000"/>
	</bean>
	
	<util:list id="sqlSessionModifiers">
		<ref bean="timeOutSqlSessionModifier"/>
		<ref bean="corpusSelectionByViewByDocumentTableAccessStrategy"/>
 	</util:list>
	
	<util:list id="springAnnisDaoMatchFilters">
	</util:list>

</beans>