<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://www.oasis-open.org/docbook/xml/5.0/rng/docbook.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
    version="5.0">
    <info>
        <title>ANNIS Developer Guide</title>
        <author>
            <personname>
                <firstname>Thomas</firstname>
                <surname>Krause</surname>
            </personname>
            <email>thomas.krause@alumni.hu-berlin.de</email>
        </author>
        <orgname>SFB 632 Information Structure / D1 Linguistic Database</orgname>
        <orgname>Humboldt-Universität zu Berlin &amp; Universität Potsdam</orgname>
        <releaseinfo>Version ${project.version}</releaseinfo>
        <pubdate>${mavenBuildTimestamp}</pubdate>

    </info>
    <section>
        <title>Architecture</title>
        <para>ANNIS is a web-based search and visualization architecture for multi-layer corpora.
            ANNIS consists of two major components: a backend service and a web front-end. There is
            also a local version, ANNIS Kickstarter, which is a simple starting point for new users
            who want to try out the system without installing a full server.<variablelist>
                <varlistentry>
                    <term>Backend Service</term>
                    <listitem>
                        <para>The service runs on a web server such as Tomcat or Jetty and
                            communicates with a relational database, using the open source DB
                            PostgreSQL. PostgreSQL (V9.1) must be installed for ANNIS to work. For
                            more information on installing and managing the backend service, see the
                            Administration Guide in the documentation.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Web Front-end</term>
                    <listitem>
                        <para>The web front-end runs in a normal browser (we recommend Google
                            Chrome) and communicates with the backend server.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>ANNIS Kickstarter</term>
                    <listitem>
                        <para>ANNIS Kickstarter is a cross-platform local version which requires
                            nothing but a PostgreSQL installation to run. It will run under LINUX,
                            Windows and Mac. For a quick tutorial to get started with Kickstarter,
                            see the ANNIS User Guide.</para>
                    </listitem>
                </varlistentry>
            </variablelist></para>
    </section>
    <section>
        <title>Building ANNIS</title>
        <para>ANNIS uses <link xlink:href="http://maven.apache.org/">Maven3</link> as build tool.
            Maven itself is based on Java and should run on every major operating system. You have
            to download and install the appropriate version for your operating system from <link
                xlink:href="http://maven.apache.org/download.html"
                >http://maven.apache.org/download.html</link> before you can build ANNIS. Maven will
            download all needed dependencies from central servers on the first build so you will
            need to have a working internet connection. The dependencies are cached locally once
            their are downloaded. </para>
        <para> When you have downloaded or checked out the source of ANNIS the top-level directory
            of the source code is the parent project for all ANNIS sub-projects. If you want to
            build every project that is part of ANNIS just execute
            <programlisting>cd &lt;annis-sources>/
mvn install            </programlisting> This
            might take a while on the first execution. <code>mvn clean</code> will remove all
            compiled code if necessary. </para>
        <para>If you only want to compile a sub-project execute <code>mvn install</code> in the
            corresponding sub-directory. Every folder with a sub-project will have a
                <filename>pom.xml</filename> file. These files configure the whole build process.
            The Maven documenation contains detailed explanations of the structure and possible
            content of the configuration files.</para>
        <para> Some sub-projects don't provide a library but will produce a zip or tar/gz-file when
            they are compiled. These assembly steps (see <link
                xlink:href="http://maven.apache.org/plugins/maven-assembly-plugin/">Maven
                documentation</link>) are automatically invoked on <code>mvn install</code>.</para>
    </section>
    <section>
        <title>Using an IDE</title>
        <para>While you can use any text editor of your choice to change ANNIS and compile it
            completly on the command line using Maven, a proper IDE will be a huge help for you. You
            can use any IDE which has a good support for Maven. The ANNIS main developers currently
            recommend the Netbeans 7.x IDE for development.</para>
    </section>
    <section>
        <title>Front-end</title>
        <para>The ANNIS front-end is a web application implemented in Java and the <link
                xlink:href="https://vaadin.com/">Vaadin</link> framework. It communicates with the
            backend service via a REST interface.</para>
        <section>
            <title>Running an embedded Jetty instance for local access</title>
            <para> This way of running the front-end is very useful, if you want to access Annis on
                you local machine as a single user. </para>
            <para> You don't need to install Jetty or Tomcat by yourself using this method. A
                security manager has to be configured. The recommend (and most easy to configure)
                security manager for this setup is the TestSecurityManager.
                <programlisting>cd &lt;unzipped source>/annis-gui/
mvn jetty:run</programlisting>
                Now you can access the site under <link
                    xlink:href="http://localhost:8080/annis-gui/app"
                    >http://localhost:8080/annis-gui/app</link>. The Jetty server might be stopped
                by pressing "CTRL-C". </para>
        </section>


        <section>
            <title>HOWTO add new visualizers</title>
            <section>
                <title>ANNIS visualizer plugin hierachy</title>
                <para> The ANNIS-Visualizer plugins also depends of the PluginSystem, which searches
                    the Java Classpath for classes with the annotation @PluginImplementation.<inlinemediaobject>
                        <imageobject>
                            <imagedata fileref="images/plugin_structure.svg" width="100%"/>
                        </imageobject>
                    </inlinemediaobject></para>
            </section>
            <section>
                <title>HOWTO implement a new visualizer</title>
                <para>There exists two different kinds of visualizer.</para>
                <section>
                    <title>iframe visualizer</title>
                    <para>TODO</para>                    
                </section>
                <section>
                    <title>vaadin visualizer</title>
                    <para>TODO</para>                    
                </section>
            </section>
        </section>
    </section>
</article>
