<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">
		
	<util:map id="exampleSyntaxTrees">

<entry key="a/descendant(2)::b"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AChildAxis
         AElementNodeTest
            a
      AStep
         ADescendantAxis
            ARangeSpec
               2
         AElementNodeTest
            b]]></value></entry>
            
<entry key="a/descendant(2,8)::b"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AChildAxis
         AElementNodeTest
            a
      AStep
         ADescendantAxis
            ARangeSpec
               2
               8
         AElementNodeTest
            b]]></value></entry>
            
<entry key="a/following(2)::b"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AChildAxis
         AElementNodeTest
            a
      AStep
         AFollowingAxis
            ARangeSpec
               2
         AElementNodeTest
            b]]></value></entry>
            
<entry key="a/following(2,8)::b"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AChildAxis
         AElementNodeTest
            a
      AStep
         AFollowingAxis
            ARangeSpec
               2
               8
         AElementNodeTest
            b]]></value></entry>

<entry key="a/left-child::b"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AChildAxis
         AElementNodeTest
            a
      AStep
         ALeftChildAxis
         AElementNodeTest
            b]]></value></entry>

<entry key="a/right-child::b"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AChildAxis
         AElementNodeTest
            a
      AStep
         ARightChildAxis
         AElementNodeTest
            b]]></value></entry>

<entry key="a/child(func)::b"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AChildAxis
         AElementNodeTest
            a
      AStep
         AChildAxis
            AExistanceEdgeAnnotation
               func
         AElementNodeTest
            b]]></value></entry>

<entry key='a/child(func=r"MO")::b'><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AChildAxis
         AElementNodeTest
            a
      AStep
         AChildAxis
            ARegexpEdgeAnnotation
               AEqComparison
               func
               MO
         AElementNodeTest
            b]]></value></entry>

<entry key="child::element(name)#(marker)[1 = 2][1 != 2]$variable"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AChildAxis
         AElementNodeTest
            name
         AMarkerSpec
            marker
         AComparisonExpr
            AEqComparison
            ANumberLiteralExpr
               1
            ANumberLiteralExpr
               2
         AComparisonExpr
            ANeComparison
            ANumberLiteralExpr
               1
            ANumberLiteralExpr
               2
         variable]]></value></entry>

<entry key="a/b"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AChildAxis
         AElementNodeTest
            a
      AStep
         AChildAxis
         AElementNodeTest
            b]]></value></entry>

<entry key="/a/b"><value><![CDATA[Start
   APathExpr
      AAbsolutePathType
      AStep
         AChildAxis
         AElementNodeTest
            a
      AStep
         AChildAxis
         AElementNodeTest
            b]]></value></entry>

<entry key="parent::*"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AParentAxis
         AElementNodeTest]]></value></entry>

<entry key="descendant::*"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         ADescendantAxis
         AElementNodeTest]]></value></entry>

<entry key="ancestor::*"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AAncestorAxis
         AElementNodeTest]]></value></entry>

<entry key="sibling::*"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         ASiblingAxis
         AElementNodeTest]]></value></entry>

<entry key="following::*"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AFollowingAxis
         AElementNodeTest]]></value></entry>

<entry key="preceding::*"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         APrecedingAxis
         AElementNodeTest]]></value></entry>

<entry key="following-sibling::*"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AFollowingSiblingAxis
         AElementNodeTest]]></value></entry>

<entry key="preceding-sibling::*"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         APrecedingSiblingAxis
         AElementNodeTest]]></value></entry>

<entry key="immediately-following-sibling::*"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AImmediatelyFollowingSiblingAxis
         AElementNodeTest]]></value></entry>

<entry key="immediately-preceding-sibling::*"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AImmediatelyPrecedingSiblingAxis
         AElementNodeTest]]></value></entry>

<entry key="immediately-following::*"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AImmediatelyFollowingAxis
         AElementNodeTest]]></value></entry>

<entry key="immediately-preceding::*"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AImmediatelyPrecedingAxis
         AElementNodeTest]]></value></entry>

<entry key="contained::*"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AContainedAxis
         AElementNodeTest]]></value></entry>

<entry key="containing::*"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AContainingAxis
         AElementNodeTest]]></value></entry>

<entry key="prefix::*"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         APrefixAxis
         AElementNodeTest]]></value></entry>

<entry key="suffix::*"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         ASuffixAxis
         AElementNodeTest]]></value></entry>

<entry key="overlapping::*"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AOverlappingAxis
         AElementNodeTest]]></value></entry>

<entry key="overlapping-following::*"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AOverlappingFollowingAxis
         AElementNodeTest]]></value></entry>

<entry key="overlapping-preceding::*"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AOverlappingPrecedingAxis
         AElementNodeTest]]></value></entry>

<entry key="element-span::span()"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AElementSpanAxis
         ASpanNodeTest]]></value></entry>

<entry key="attribute::*"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AAttributeAxis
         AAttributeNodeTest]]></value></entry>

<entry key="matching-element::*"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AMatchingElementAxis
         AElementNodeTest]]></value></entry>

<entry key="contained-element::*"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AContainedElementAxis
         AElementNodeTest]]></value></entry>

<entry key="containing-element::*"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AContainingElementAxis
         AElementNodeTest]]></value></entry>

<entry key="a / b \ c // d \\ e ^ f --> g &lt;-- h -->^ i &lt;--^ j -> k &lt;- l ->^ m &lt;-^ n ~> o ~&lt; p /@ q"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AChildAxis
         AElementNodeTest
            a
      AStep
         AChildAxis
         AElementNodeTest
            b
      AStep
         AParentAxis
         AElementNodeTest
            c
      AStep
         ADescendantAxis
         AElementNodeTest
            d
      AStep
         AAncestorAxis
         AElementNodeTest
            e
      AStep
         ASiblingAxis
         AElementNodeTest
            f
      AStep
         AFollowingAxis
         AElementNodeTest
            g
      AStep
         APrecedingAxis
         AElementNodeTest
            h
      AStep
         AFollowingSiblingAxis
         AElementNodeTest
            i
      AStep
         APrecedingSiblingAxis
         AElementNodeTest
            j
      AStep
         AImmediatelyFollowingAxis
         AElementNodeTest
            k
      AStep
         AImmediatelyPrecedingAxis
         AElementNodeTest
            l
      AStep
         AImmediatelyFollowingSiblingAxis
         AElementNodeTest
            m
      AStep
         AImmediatelyPrecedingSiblingAxis
         AElementNodeTest
            n
      AStep
         AContainedAxis
         AElementNodeTest
            o
      AStep
         AContainingAxis
         AElementNodeTest
            p
      AStep
         AAttributeAxis
         AAttributeNodeTest
            q]]></value></entry>
            
<entry key="a# / b#(marker) / c#+(marker2) / d#+(marker3) / e#- / f#- / g"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AChildAxis
         AElementNodeTest
            a
         AMarkerSpec
      AStep
         AChildAxis
         AElementNodeTest
            b
         AMarkerSpec
            marker
      AStep
         AChildAxis
         AElementNodeTest
            c
         AMarkerSpec
            marker2
      AStep
         AChildAxis
         AElementNodeTest
            d
         AMarkerSpec
            marker3
      AStep
         AChildAxis
         AElementNodeTest
            e
         AMarkerSpec
            marker3
      AStep
         AChildAxis
         AElementNodeTest
            f
         AMarkerSpec
            marker2
      AStep
         AChildAxis
         AElementNodeTest
            g]]></value></entry>

<entry key="child::element(name)"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AChildAxis
         AElementNodeTest
            name]]></value></entry>

<entry key="child::element(*)"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AChildAxis
         AElementNodeTest]]></value></entry>

<entry key="child::element()"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AChildAxis
         AElementNodeTest]]></value></entry>

<entry key="child::name"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AChildAxis
         AElementNodeTest
            name]]></value></entry>

<entry key="child::*"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AChildAxis
         AElementNodeTest]]></value></entry>

<entry key="attribute::attribute(name)"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AAttributeAxis
         AAttributeNodeTest
            name]]></value></entry>

<entry key="attribute::attribute(*)"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AAttributeAxis
         AAttributeNodeTest]]></value></entry>

<entry key="attribute::attribute()"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AAttributeAxis
         AAttributeNodeTest]]></value></entry>

<entry key="attribute::name"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AAttributeAxis
         AAttributeNodeTest
            name]]></value></entry>

<entry key="attribute::*"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AAttributeAxis
         AAttributeNodeTest]]></value></entry>

<entry key="element-span::span()"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AElementSpanAxis
         ASpanNodeTest]]></value></entry>

<entry key="element-span::*"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AElementSpanAxis
         ASpanNodeTest]]></value></entry>

<entry key="*"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AChildAxis
         AElementNodeTest]]></value></entry>

<entry key="whole-text::exact-match(&quot;pattern&quot;)"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AWholeTextAxis
         AExactSearchNodeTest
            pattern]]></value></entry>

<entry key="whole-text::&quot;pattern&quot;"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AWholeTextAxis
         AExactSearchNodeTest
            pattern]]></value></entry>

<entry key="whole-text::wild-match(&quot;pattern&quot;)"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AWholeTextAxis
         AWildSearchNodeTest
            pattern]]></value></entry>

<entry key="whole-text::m&quot;pattern&quot;"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AWholeTextAxis
         AWildSearchNodeTest
            pattern]]></value></entry>

<entry key="whole-text::re-match(&quot;pattern&quot;)"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AWholeTextAxis
         ARegexpSearchNodeTest
            pattern]]></value></entry>

<entry key="whole-text::r&quot;pattern&quot;"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AWholeTextAxis
         ARegexpSearchNodeTest
            pattern]]></value></entry>
            
<entry key="a | b &amp; c &amp; d"><value><![CDATA[Start
   AOrExpr
      APathExpr
         ARelativePathType
         AStep
            AChildAxis
            AElementNodeTest
               a
      AAndExpr
         APathExpr
            ARelativePathType
            AStep
               AChildAxis
               AElementNodeTest
                  b
         APathExpr
            ARelativePathType
            AStep
               AChildAxis
               AElementNodeTest
                  c
         APathExpr
            ARelativePathType
            AStep
               AChildAxis
               AElementNodeTest
                  d]]></value></entry>

<entry key="(a | b) &amp; c &amp; d"><value><![CDATA[Start
   AAndExpr
      AOrExpr
         APathExpr
            ARelativePathType
            AStep
               AChildAxis
               AElementNodeTest
                  a
         APathExpr
            ARelativePathType
            AStep
               AChildAxis
               AElementNodeTest
                  b
      APathExpr
         ARelativePathType
         AStep
            AChildAxis
            AElementNodeTest
               c
      APathExpr
         ARelativePathType
         AStep
            AChildAxis
            AElementNodeTest
               d]]></value></entry>

<entry key="a[b | c &amp; d]"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AChildAxis
         AElementNodeTest
            a
         AOrExpr
            APathExpr
               ARelativePathType
               AStep
                  AChildAxis
                  AElementNodeTest
                     b
            AAndExpr
               APathExpr
                  ARelativePathType
                  AStep
                     AChildAxis
                     AElementNodeTest
                        c
               APathExpr
                  ARelativePathType
                  AStep
                     AChildAxis
                     AElementNodeTest
                        d]]></value></entry>

<entry key="a[ (b | c) &amp; d]"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AChildAxis
         AElementNodeTest
            a
         AAndExpr
            AOrExpr
               APathExpr
                  ARelativePathType
                  AStep
                     AChildAxis
                     AElementNodeTest
                        b
               APathExpr
                  ARelativePathType
                  AStep
                     AChildAxis
                     AElementNodeTest
                        c
            APathExpr
               ARelativePathType
               AStep
                  AChildAxis
                  AElementNodeTest
                     d]]></value></entry> 

<entry key="&quot;foo&quot; = &quot;bar&quot;"><value><![CDATA[Start
   AComparisonExpr
      AEqComparison
      AStringLiteralExpr
         foo
      AStringLiteralExpr
         bar]]></value></entry>

<entry key="&quot;foo&quot; != &quot;bar&quot;"><value><![CDATA[Start
   AComparisonExpr
      ANeComparison
      AStringLiteralExpr
         foo
      AStringLiteralExpr
         bar]]></value></entry>

<entry key="1 &lt; 2"><value><![CDATA[Start
   AComparisonExpr
      ALtComparison
      ANumberLiteralExpr
         1
      ANumberLiteralExpr
         2]]></value></entry>

<entry key="1 &lt;= 2"><value><![CDATA[Start
   AComparisonExpr
      ALeComparison
      ANumberLiteralExpr
         1
      ANumberLiteralExpr
         2]]></value></entry>

<entry key="1 > 2"><value><![CDATA[Start
   AComparisonExpr
      AGtComparison
      ANumberLiteralExpr
         1
      ANumberLiteralExpr
         2]]></value></entry>

<entry key="1 >= 2"><value><![CDATA[Start
   AComparisonExpr
      AGeComparison
      ANumberLiteralExpr
         1
      ANumberLiteralExpr
         2]]></value></entry>

<entry key="1 + 2"><value><![CDATA[Start
   APlusExpr
      ANumberLiteralExpr
         1
      ANumberLiteralExpr
         2]]></value></entry>

<entry key="1 - 2"><value><![CDATA[Start
   AMinusExpr
      ANumberLiteralExpr
         1
      ANumberLiteralExpr
         2]]></value></entry>

<entry key="1 * 2"><value><![CDATA[Start
   ATimesExpr
      ANumberLiteralExpr
         1
      ANumberLiteralExpr
         2]]></value></entry>

<entry key="1 div 2"><value><![CDATA[Start
   ADivExpr
      ANumberLiteralExpr
         1
      ANumberLiteralExpr
         2]]></value></entry>

<entry key="1 idiv 2"><value><![CDATA[Start
   AIdivExpr
      ANumberLiteralExpr
         1
      ANumberLiteralExpr
         2]]></value></entry>

<entry key="1 mod 2"><value><![CDATA[Start
   AModExpr
      ANumberLiteralExpr
         1
      ANumberLiteralExpr
         2]]></value></entry>

<entry key="-123.456"><value><![CDATA[Start
   ANumberLiteralExpr
      -123.456]]></value></entry>

<entry key="+123.346e789"><value><![CDATA[Start
   ANumberLiteralExpr
      +123.346e789]]></value></entry>

<entry key="-123.456E-789"><value><![CDATA[Start
   ANumberLiteralExpr
      -123.456E-789]]></value></entry>

<entry key="+1 + --2"><value><![CDATA[Start
   APlusExpr
      ANumberLiteralExpr
         +1
      ANumberLiteralExpr
         --2]]></value></entry>

<entry key="child::element(name)$variable"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AChildAxis
         AElementNodeTest
            name
         variable]]></value></entry>

<entry key="$v/a"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AChildAxis
         AElementNodeTest
         v
      AStep
         AChildAxis
         AElementNodeTest
            a]]></value></entry>

<entry key="a/$v"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AChildAxis
         AElementNodeTest
            a
      AStep
         AChildAxis
         AElementNodeTest
         v]]></value></entry>

<entry key="a/sibling::$v"><value><![CDATA[Start
   APathExpr
      ARelativePathType
      AStep
         AChildAxis
         AElementNodeTest
            a
      AStep
         ASiblingAxis
         AElementNodeTest
         v]]></value></entry>

<entry key="/a/b &amp; /c/d &amp; $v ^ $w"><value><![CDATA[Start
   AAndExpr
      APathExpr
         AAbsolutePathType
         AStep
            AChildAxis
            AElementNodeTest
               a
         AStep
            AChildAxis
            AElementNodeTest
               b
      APathExpr
         AAbsolutePathType
         AStep
            AChildAxis
            AElementNodeTest
               c
         AStep
            AChildAxis
            AElementNodeTest
               d
      APathExpr
         ARelativePathType
         AStep
            AChildAxis
            AElementNodeTest
            v
         AStep
            ASiblingAxis
            AElementNodeTest
            w
]]></value></entry>

<entry key="no_args()"><value><![CDATA[Start
   AFunctionExpr
      no_args]]></value></entry>

<entry key="path(/a/b)"><value><![CDATA[Start
   AFunctionExpr
      path
      APathExpr
         AAbsolutePathType
         AStep
            AChildAxis
            AElementNodeTest
               a
         AStep
            AChildAxis
            AElementNodeTest
               b]]></value></entry>
               
<entry key="many_args(1, /a2, &quot;3&quot;, count(/a4) = 1, nested(nested()))"><value><![CDATA[Start
   AFunctionExpr
      many_args
      ANumberLiteralExpr
         1
      APathExpr
         AAbsolutePathType
         AStep
            AChildAxis
            AElementNodeTest
               a2
      AStringLiteralExpr
         3
      AComparisonExpr
         AEqComparison
         AFunctionExpr
            count
            APathExpr
               AAbsolutePathType
               AStep
                  AChildAxis
                  AElementNodeTest
                     a4
         ANumberLiteralExpr
            1
      AFunctionExpr
         nested
         AFunctionExpr
            nested]]></value></entry>

	</util:map>
	
	<util:list id="good">
		<value>/a/layer(name)::element()</value>
		<value>/a/alignment(role1, role2, greed1, greed2)::element()</value>
		<value>/a/alignment(role1, role2, greed1)::element()</value>
		<value>/a/alignment(role1, role2)::element()</value>
		<value>/a/aligned(role1, role2, greed1, greed2)::span()</value>
		<value>/a/aligned(role1, role2, greed1)::span()</value>
		<value>/a/aligned(role1, role2)::span()</value>
		<value>./child::element()</value>
		<value>.//a</value>
		<value>. ^ a</value>
		<value>a/..</value>
		<value>a/../b</value>
		<value>../a</value>
	</util:list>
	
	<util:list id="bad">
		<value>/child::span(fehler)</value>
	</util:list>

</beans>
