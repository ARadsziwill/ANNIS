<?xml version="1.0" encoding="UTF-8"?>
<beans 

	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
	">

  <import resource="classpath:annis/executors/Executors-context.xml" />

	<!-- Enable bean autowiring -->
  <context:annotation-config/>
	
	<!-- Enable AspectJ-style AOP annotations -->
  <aop:aspectj-autoproxy/>

	<!-- database connection configuration -->
  <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="location" value="file:${annis.home}/conf/database.properties"/>
    <property name="placeholderPrefix" value="$dao{"/>
  </bean>
	
	<!-- Transaction management -->
  <tx:annotation-driven transaction-manager="transactionManager"/>
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>

	<!-- DataSource -->
  <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName" value="$dao{datasource.driver}"/>
    <property name="url" value="$dao{datasource.url}"/>
    <property name="username" value="$dao{datasource.username}"/>
    <property name="password" value="$dao{datasource.password}"/>
  </bean>

  <bean id="graphExtractor" class="annis.dao.GraphExtractor">
    <property name="matchedNodesViewName" value="${annis.matched-nodes-view}" />
  </bean>


  <bean id="countExtractor" class="annis.dao.CountExtractor">
    <property name="matchedNodesViewName" value="${annis.matched-nodes-view}" />
  </bean>

  <bean id="matrixExtractor" class="annis.dao.MatrixExtractor">
    <property name="matchedNodesViewName" value="${annis.matched-nodes-view}" />
  </bean>
		
	<!-- Helper for weka command -->
  <bean id="wekaHelper" class="annis.WekaHelper"/>
	
	<!-- Helper for list command -->
  <bean id="listCorpusSqlHelper" class="annis.sqlgen.ListCorpusSqlHelper"/>
		
	<!-- Helper for nodeAnnotations command -->
  <bean id="listNodeAnnotationsSqlHelper" class="annis.sqlgen.ListNodeAnnotationsSqlHelper"/>
		
	<!-- Helper for listCorpusAnnotations command -->
  <bean id="listCorpusAnnotationsSqlHelper" class="annis.sqlgen.ListCorpusAnnotationsSqlHelper"/>
		
	<!-- DddQueryParser -->
  <import resource="classpath:de/deutschdiachrondigital/dddquery/parser/DddQueryParser-context.xml"/>
  <import resource="classpath:annis/ql/parser/AnnisParser-context.xml"/>
	
	<!-- SqlGenerator -->
  <import resource="classpath:annis/sqlgen/SqlGenerator-context.xml"/>
	
	<!-- Timing Aspect for DAO methods -->
  <bean class="annis.dao.DaoTiming"/>
	
	<!-- Custom transaction management, so that all AnnisDao methods are read-only -->
  <bean class="annis.dao.DaoTransactionManagement">
    <property name="transactionManager" ref="transactionManager"/>
  </bean>
	
  <bean id="listCorpusByNameDaoHelper" class="annis.dao.ListCorpusByNameDaoHelper">
    <property name="requiredType" value="java.lang.Long"/>
  </bean>

  <bean id="defaultJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <property name="dataSource" ref="dataSource"/>
    <property name="fetchSize" value="0"/>
  </bean>

  <bean id="metaDataFilter" class="annis.dao.MetaDataFilter">
    <property name="jdbcTemplate" ref="defaultJdbcTemplate" />
		<!--<property name="dataSource" ref="dataSource"/>-->
    <property name="subQueryCorpusSelectionStrategy" ref="subQueryCorpusSelectionStrategy" />
  </bean>

	<!-- exported bean: AnnisDao -->
  <bean id="springAnnisDao" class="annis.dao.SpringAnnisDao">
    <property name="jdbcTemplate" ref="defaultJdbcTemplate" />
		<!--<property name="dataSource" ref="dataSource"/>-->

    <property name="aqlParser" ref="annisParser"/>
    <property name="sqlGenerator" ref="findSqlGenerator"/>
    <property name="dddqueryParser" ref="dddQueryParser" />
    <property name="dddqueryAnalysis" ref="queryAnalysis" />

    <property name="defaultQueryExecutor" ref="defaultQueryExecutor" />
    <property name="listCorpusSqlHelper" ref="listCorpusSqlHelper"/>
    <property name="listNodeAnnotationsSqlHelper" ref="listNodeAnnotationsSqlHelper"/>
    <property name="listCorpusAnnotationsSqlHelper" ref="listCorpusAnnotationsSqlHelper"/>
		
		<!-- new -->
    <property name="queryAnalysis" ref="aqlAnalysis"/>
    <property name="findSqlGenerator" ref="findSqlGenerator"/>
    <property name="sqlSessionModifiers" ref="sqlSessionModifiers"/>
    <property name="listCorpusByNameDaoHelper" ref="listCorpusByNameDaoHelper"/>
    <property name="countExtractor" ref="countExtractor"/>
    <property name="matrixExtractor" ref="matrixExtractor" />

    <property name="graphExtractor" ref="graphExtractor" />
    <property name="executorList" ref="executorList" />

    <property name="metaDataFilter" ref="metaDataFilter" />

  </bean>
	
  <bean id="sqlScriptSessionModifier" class="annis.dao.ScriptFileSqlSessionModifier">
    <property name="scriptFile" value="modify_session.sql"/>
    <property name="administrationDao">
      <bean class="annis.administration.SpringAnnisAdministrationDao">
        <property name="scriptPath" value="${annis.script-path}"/>
        <property name="dataSource" ref="dataSource"/>
      </bean>
    </property>
  </bean>
	
  <bean id="timeOutSqlSessionModifier" class="annis.dao.TimeOutSqlSessionModifier">
    <property name="timeout" value="${annis.timeout}"/>
  </bean>

  <util:list id="sqlSessionModifiers">
    <ref bean="timeOutSqlSessionModifier"/>
    <ref bean="sqlScriptSessionModifier"/>
  </util:list>
	

</beans>